// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: mapreduce.proto

package mapreduce

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JobType int32

const (
	JobType_MAP    JobType = 0
	JobType_REDUCE JobType = 1
	JobType_NONE   JobType = 2 // no hay mÃ¡s trabajo
)

// Enum value maps for JobType.
var (
	JobType_name = map[int32]string{
		0: "MAP",
		1: "REDUCE",
		2: "NONE",
	}
	JobType_value = map[string]int32{
		"MAP":    0,
		"REDUCE": 1,
		"NONE":   2,
	}
)

func (x JobType) Enum() *JobType {
	p := new(JobType)
	*p = x
	return p
}

func (x JobType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobType) Descriptor() protoreflect.EnumDescriptor {
	return file_mapreduce_proto_enumTypes[0].Descriptor()
}

func (JobType) Type() protoreflect.EnumType {
	return &file_mapreduce_proto_enumTypes[0]
}

func (x JobType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobType.Descriptor instead.
func (JobType) EnumDescriptor() ([]byte, []int) {
	return file_mapreduce_proto_rawDescGZIP(), []int{0}
}

type Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkerId      int32                  `protobuf:"varint,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_mapreduce_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_mapreduce_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_mapreduce_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetWorkerId() int32 {
	if x != nil {
		return x.WorkerId
	}
	return 0
}

type JobReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          JobType                `protobuf:"varint,1,opt,name=type,proto3,enum=mapreduce.JobType" json:"type,omitempty"`
	TaskId        int32                  `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Files         []string               `protobuf:"bytes,3,rep,name=files,proto3" json:"files,omitempty"`                     // puede ser 1 archivo para map o varios para reduce
	NReduce       int32                  `protobuf:"varint,4,opt,name=n_reduce,json=nReduce,proto3" json:"n_reduce,omitempty"` // total de reduces
	NMap          int32                  `protobuf:"varint,5,opt,name=n_map,json=nMap,proto3" json:"n_map,omitempty"`          // total de maps
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobReply) Reset() {
	*x = JobReply{}
	mi := &file_mapreduce_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobReply) ProtoMessage() {}

func (x *JobReply) ProtoReflect() protoreflect.Message {
	mi := &file_mapreduce_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobReply.ProtoReflect.Descriptor instead.
func (*JobReply) Descriptor() ([]byte, []int) {
	return file_mapreduce_proto_rawDescGZIP(), []int{1}
}

func (x *JobReply) GetType() JobType {
	if x != nil {
		return x.Type
	}
	return JobType_MAP
}

func (x *JobReply) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *JobReply) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *JobReply) GetNReduce() int32 {
	if x != nil {
		return x.NReduce
	}
	return 0
}

func (x *JobReply) GetNMap() int32 {
	if x != nil {
		return x.NMap
	}
	return 0
}

type FinishedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          JobType                `protobuf:"varint,1,opt,name=type,proto3,enum=mapreduce.JobType" json:"type,omitempty"`
	TaskId        int32                  `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinishedRequest) Reset() {
	*x = FinishedRequest{}
	mi := &file_mapreduce_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinishedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishedRequest) ProtoMessage() {}

func (x *FinishedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mapreduce_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishedRequest.ProtoReflect.Descriptor instead.
func (*FinishedRequest) Descriptor() ([]byte, []int) {
	return file_mapreduce_proto_rawDescGZIP(), []int{2}
}

func (x *FinishedRequest) GetType() JobType {
	if x != nil {
		return x.Type
	}
	return JobType_MAP
}

func (x *FinishedRequest) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_mapreduce_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_mapreduce_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_mapreduce_proto_rawDescGZIP(), []int{3}
}

var File_mapreduce_proto protoreflect.FileDescriptor

const file_mapreduce_proto_rawDesc = "" +
	"\n" +
	"\x0fmapreduce.proto\x12\tmapreduce\"&\n" +
	"\aRequest\x12\x1b\n" +
	"\tworker_id\x18\x01 \x01(\x05R\bworkerId\"\x91\x01\n" +
	"\bJobReply\x12&\n" +
	"\x04type\x18\x01 \x01(\x0e2\x12.mapreduce.JobTypeR\x04type\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\x05R\x06taskId\x12\x14\n" +
	"\x05files\x18\x03 \x03(\tR\x05files\x12\x19\n" +
	"\bn_reduce\x18\x04 \x01(\x05R\anReduce\x12\x13\n" +
	"\x05n_map\x18\x05 \x01(\x05R\x04nMap\"R\n" +
	"\x0fFinishedRequest\x12&\n" +
	"\x04type\x18\x01 \x01(\x0e2\x12.mapreduce.JobTypeR\x04type\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\x05R\x06taskId\"\x05\n" +
	"\x03Ack*(\n" +
	"\aJobType\x12\a\n" +
	"\x03MAP\x10\x00\x12\n" +
	"\n" +
	"\x06REDUCE\x10\x01\x12\b\n" +
	"\x04NONE\x10\x022\x81\x01\n" +
	"\x06Master\x127\n" +
	"\n" +
	"RequestJob\x12\x12.mapreduce.Request\x1a\x13.mapreduce.JobReply\"\x00\x12>\n" +
	"\x0eReportFinished\x12\x1a.mapreduce.FinishedRequest\x1a\x0e.mapreduce.Ack\"\x00B\fZ\n" +
	"/mapreduceb\x06proto3"

var (
	file_mapreduce_proto_rawDescOnce sync.Once
	file_mapreduce_proto_rawDescData []byte
)

func file_mapreduce_proto_rawDescGZIP() []byte {
	file_mapreduce_proto_rawDescOnce.Do(func() {
		file_mapreduce_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mapreduce_proto_rawDesc), len(file_mapreduce_proto_rawDesc)))
	})
	return file_mapreduce_proto_rawDescData
}

var file_mapreduce_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mapreduce_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_mapreduce_proto_goTypes = []any{
	(JobType)(0),            // 0: mapreduce.JobType
	(*Request)(nil),         // 1: mapreduce.Request
	(*JobReply)(nil),        // 2: mapreduce.JobReply
	(*FinishedRequest)(nil), // 3: mapreduce.FinishedRequest
	(*Ack)(nil),             // 4: mapreduce.Ack
}
var file_mapreduce_proto_depIdxs = []int32{
	0, // 0: mapreduce.JobReply.type:type_name -> mapreduce.JobType
	0, // 1: mapreduce.FinishedRequest.type:type_name -> mapreduce.JobType
	1, // 2: mapreduce.Master.RequestJob:input_type -> mapreduce.Request
	3, // 3: mapreduce.Master.ReportFinished:input_type -> mapreduce.FinishedRequest
	2, // 4: mapreduce.Master.RequestJob:output_type -> mapreduce.JobReply
	4, // 5: mapreduce.Master.ReportFinished:output_type -> mapreduce.Ack
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_mapreduce_proto_init() }
func file_mapreduce_proto_init() {
	if File_mapreduce_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mapreduce_proto_rawDesc), len(file_mapreduce_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mapreduce_proto_goTypes,
		DependencyIndexes: file_mapreduce_proto_depIdxs,
		EnumInfos:         file_mapreduce_proto_enumTypes,
		MessageInfos:      file_mapreduce_proto_msgTypes,
	}.Build()
	File_mapreduce_proto = out.File
	file_mapreduce_proto_goTypes = nil
	file_mapreduce_proto_depIdxs = nil
}
